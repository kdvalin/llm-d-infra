multinode: false

modelArtifacts:
  uri: "hf://RedHatAI/Llama-3.3-70B-Instruct-FP8-dynamic"
  size: 140Gi
  authSecretName: "llm-d-hf-token"
  name: "RedHatAI/Llama-3.3-70B-Instruct-FP8-dynamic"

routing:
  modelName: RedHatAI/Llama-3.3-70B-Instruct-FP8-dynamic
  servicePort: 8000
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      # name: infra-kv-events-inference-gateway # set in helmfile

  proxy:
    image: ghcr.io/llm-d/llm-d-routing-sidecar:v0.2.0
    connector: nixlv2
    secure: false

  inferenceModel:
    create: false

  inferencePool:
    create: false
    # name: gaie-kv-events # set in helmfile

  httpRoute:
    create: true

  epp:
    create: false

decode:
  create: true
  replicas: 2
  monitoring:
    podmonitor:
      enabled: true
      portName: "metrics"  # decode vLLM service port (from routing.proxy.targetPort)
      path: "/metrics"
      interval: "30s"
  containers:
  - name: "vllm"
    image: "ghcr.io/llm-d/llm-d:v0.2.0"
    modelCommand: custom
    command:
      - /bin/sh
      - '-c'
    args:
      - |
        vllm serve RedHatAI/Llama-3.3-70B-Instruct-FP8-dynamic \
        --served-model-name RedHatAI/Llama-3.3-70B-Instruct-FP8-dynamic \
        --tensor-parallel-size 2 \
        --max-model-len 20000 \
        --host 0.0.0.0 \
        --port 8200 \
        --block-size 64 \
        --prefix-caching-hash-algo sha256_cbor_64bit \
        --kv-transfer-config '{"kv_connector":"NixlConnector", "kv_role":"kv_both"}' \
        --kv-events-config "{\"enable_kv_cache_events\":true,\"publisher\":\"zmq\",\"endpoint\":\"tcp://gaie-kv-events-epp.llm-d.svc.cluster.local:5557\",\"topic\":\"kv@${POD_IP}@RedHatAI/Llama-3.3-70B-Instruct-FP8-dynamic\"}"
    env:
      - name: PYTHONHASHSEED
        value: "42"
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: CUDA_VISIBLE_DEVICES
        value: "0,1"
      - name: UCX_TLS
        value: "cuda_ipc,cuda_copy,tcp"
      - name: VLLM_NIXL_SIDE_CHANNEL_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: VLLM_NIXL_SIDE_CHANNEL_PORT
        value: "5557"
      - name: VLLM_LOGGING_LEVEL
        value: DEBUG
    ports:
      - containerPort: 5557
        protocol: TCP
      - containerPort: 8200
        name: metrics
        protocol: TCP
    resources:
      limits:
        nvidia.com/gpu: "2"
      requests:
        nvidia.com/gpu: "2"
    mountModelVolume: true
    volumeMounts:
    - name: metrics-volume
      mountPath: /.config
    - name: torch-compile-cache
      mountPath: /.cache
    - name: dshm
      mountPath: /dev/shm
  volumes:
  - name: metrics-volume
    emptyDir: {}
  - name: torch-compile-cache
    emptyDir: {}
  - name: dshm
    emptyDir:
      medium: Memory
      sizeLimit: "2Gi"
# PD disabled in this example
prefill:
  create: false
